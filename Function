Tables used : customers_fun / employees_fun 


Syntax:

CREATE FUNCTION function_name [ (parameter datatype [, parameter datatype]) ]   
RETURNS return_datatype  
BEGIN  
Declaration_section  
Executable_section  
END;  


DROP function <function_name>
--------------------------------- Example 1 ----------------------------------
DELIMITER $$

CREATE FUNCTION CustomerLevel(
	credit DECIMAL(10,2)
) 
RETURNS VARCHAR(20)
DETERMINISTIC
BEGIN
    DECLARE customerLevel VARCHAR(20);

    IF credit > 50000 THEN
		SET customerLevel = 'PLATINUM';
    ELSEIF (credit >= 50000 AND 
			credit <= 10000) THEN
        SET customerLevel = 'GOLD';
    ELSEIF credit < 10000 THEN
        SET customerLevel = 'SILVER';
    END IF;
	-- return the customer level
	RETURN (customerLevel);
END$$
DELIMITER ;

---- now use inside the query to get the results:

SELECT 
    customerName, 
    CustomerLevel(creditLimit)
FROM
    customers_fun
ORDER BY 
    customerName;


======================================= Example :2 ========================================

Calling a stored function in a stored procedure

DELIMITER $$

CREATE PROCEDURE GetCustomerLevel(
    IN  customerNo INT,  
    OUT customerLevel VARCHAR(20)
)
BEGIN

	DECLARE credit DEC(10,2) DEFAULT 0;
    
    -- get credit limit of a customer
    SELECT 
		creditLimit 
	INTO credit
    FROM customers_fun
    WHERE 
		customerNumber = customerNo;
    
    -- call the function 
    SET customerLevel = CustomerLevel(credit);
END$$

DELIMITER ;


calling a procedure  ---> CALL GetCustomerLevel(-131,@customerLevel);   ---> SELECT @customerLevel;

